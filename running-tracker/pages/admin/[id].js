import styles from '../../styles/Home.module.css'
import Script from 'next/script';
import {useUser} from '@auth0/nextjs-auth0/client';
import Navbar from '../../componenets/navbar';
import Cookies from 'js-cookie';
import Link from 'next/link';
const db = require('../../db/db_connection.js')
const Admin = ({ users }) => {
    const{user, error, isLoading} = useUser();  
    var userID = "";
    userID = Cookies.get('id');
    const navigationBar = Navbar(userID);
    if(user && !isLoading&& Cookies.get("roleID")==2){
        var path = window.location.pathname;
        var page = path.split("/").pop();
        if(userID != page){
          Cookies.set("id",userID);
          location.href = "/races";
    
        }
        var x = Object.keys(users).length;
        const userList = [];
        for(var key  = 0; key < x;key++){
            userList[key] = users[key];
        }
        const displayedUsers = displayUsers(userList);
        return (
                <div className={styles.container}>

                    <header className ={styles.header}>
                        <title>Admin Space</title>
                        <meta name="description" content="Generated by create next app" />
                        <link rel="icon" href="/favicon.ico" />
                        <link
                            rel="stylesheet"
                            href=
        "https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"/>
                        <Script id = "1" src=
        "https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js">
                        </Script>
                        <Script id = "2" src=
        "https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js">
                        </Script>
                        {navigationBar}
                    </header>
                    <main className={styles.main}> 
                        <div class="container">
                            <div className = {styles.card}>
                            <h1 >Welcome Administrator</h1>
                            <h3>Alter the roles below</h3>
                            </div>
                        <div>
                            <table className= {styles.racesTable}>
                                <thead >
                                    <tr>
                                        <th>Email</th>
                                        <th>Name</th>
                                        <th>Role ID</th>
                                        <th></th>
                                        <th></th>
                                        <th></th>

                                    </tr>
                                </thead>
                                <tbody id = "races">
                                    {displayedUsers}
        
                                </tbody>
                            </table>
                        </div>
                        </div>
                    </main>
                    <footer className={styles.footer}>
                        <a
                            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                            target="_blank"
                            rel="noopener noreferrer"
                            >
                            Powered by Power{' '}
                            <span className={styles.logo}>
                            </span>
                        </a>
                    </footer>
                </div>
                )
    }
    else if(!isLoading){
        location.href = "/";
    }
}
function updateButton(roleID,userID){
        var sendJson =
        {
            'ID': userID,
            'role' : roleID,
        }
        updateRole(sendJson);
        alert("You have successfully altered role to "+roleID);
        var formLink = "/admin/"+Cookies.get('id');
        location.href = formLink;
}

async function updateRole(sendJson){
    const apiString = location.origin + "/api/admin";
    const response = await fetch(apiString, {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(sendJson)
    });

    if (!response.ok) {
        throw new Error(`Error: ${response.status}`);
    }
}


export async function getServerSideProps(context) {
    const id = context.params.id;
    const [rows, fields] = await db.execute('SELECT * FROM Person where id != ?',[id]);
    let results = JSON.parse(JSON.stringify(rows));
    return {
        props: { users: results }
    };
}
const UserDisplay = ({user}) => {
    const id = user.id;
    return (
    <tr>
    <td>{user.email}</td>
    <td>{user.firstName} {user.lastName}</td>
    <td>{user.roleID}</td>
    <td><button id = {id} onClick={()=>{updateButton(0,id)}}>Make Runner</button></td>
    <td><button id = {id} onClick={()=>{updateButton(1,id)}}>Make Organizer</button></td>
    <td><button id = {id} onClick={()=>{updateButton(2,id)}}>Make Admin</button></td>
    </tr>);
}
const displayUsers = ( userArray ) => { 
    return (
      (userArray || []).map(user => <UserDisplay key={user.ID} user={user} />)
    );
   }
export default Admin;